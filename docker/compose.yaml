services:
  pf:
    build:
      context: ../pf
      target: deploy
    ports:
      - "3000:3000"
    volumes:
      - ../pf:/app
    depends_on:
      db:
        condition: service_healthy
      api:
        condition: service_started
    networks:
      mainnet:
        ipv4_address: 172.25.0.11

  api:
    build: ../api_rewrite
    ports:
      - 4000:4000
    volumes:
      - ../api_rewrite:/app
    networks:
      mainnet:
        ipv4_address: 172.25.0.12

  db:
    image: postgres:16-alpine
    restart: always
    ports:
      - 5432:5432
    volumes:
      - db-data:/var/lib/postgresql/data
    user: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=thisisalocalnetworkserver
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      mainnet:
        ipv4_address: 172.25.0.13

  proxy:
    image: nginx
    volumes:
      - type: bind
        source: ../proxy/nginx.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
    ports:
      - 80:80
    depends_on:
      - pf
    networks:
      mainnet:
        ipv4_address: 172.25.0.10

volumes:
  db-data: { }

networks:
  mainnet:
    ipam:
      driver: default
      config:
        - subnet: 172.25.0.0/16
          gateway: 172.25.0.1